// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Users {
	id Int @id @default(autoincrement())
	name String
	email String @unique
	password String

  bank_accounts Bank_accounts[]
  profile Profiles?
}

model Bank_accounts {
	id Int @id @default(autoincrement())
	user_id Int
	bank_name String
	bank_account_number Int @unique
	balance Float

  user Users @relation(fields: [user_id], references: [id], onDelete: Cascade)
  transactions_from Transactions[] @relation("source_account")
  transactions_to Transactions[] @relation("destination_account")
}

model Profiles {
	id Int @id @default(autoincrement())
	user_id Int @unique
	identity_type String
  identity_number String
	address String

  user Users @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Transactions {
	id Int @id @default(autoincrement())
	source_account_id Int
  destination_account_id Int
	amount Float

  source_account Bank_accounts @relation("source_account", fields: [source_account_id], references: [id], onDelete: Cascade)
  destination_account Bank_accounts @relation("destination_account", fields: [destination_account_id], references: [id], onDelete: Cascade)
}